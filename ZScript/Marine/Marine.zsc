//TODO:
//Give marines a user_armor variable, that specifies what armor class they spawn with. Default will be the green armor.

//IDEA:
//Give marines a dropkick melee, especially when a light enough non-flying enemy is over a ledge, and especially if fall damage is on.
//Give them 3 different grenade types depending on the situation, HE-FRAG, Smoke, and Flashbang.
//Give marines the ability to scale ledges that are almost their height ? Since there's sprites for that in Project Brutality I could use, like the kicks.
//Make some kind of extra handler addon with actual options, like spawning marines on map startup, replacing items with spawn beacons, etc.

Class SM_Marine : KAI_Humanoid
{
	Default
	{
		//$Title AI Marine
		//$Category Marines
		//$Sprite MARIC1
		Health 100;
		GibHealth 20;
		Height 56;
		DeathHeight 12;
		CameraHeight 50;
		Radius 16;
		YScale 0.98;
		Mass 100;
		Speed 10;
		FastSpeed 14;
		PainChance 96;
		PainThreshold 5;
		FriendlySeeBlocks 48;
		MaxDropOffHeight 48;
		MaxTargetRange 8192;
		MinMissileChance 100;
		Tag "Marine NPC";
		Species "Military";
		Decal "BulletChip";
		Obituary "%o was shot to death by a marine.";
		HitObituary "%o got %p head smashed in by a marines' rifle.";
		DropItem "Clip";
		DropItem "Clip", 128, 2;
		DropItem "ClipBox", 64;
		PainSound "Marine/Pain";
		DeathSound "Marine/Death";
		Monster;
		+JumpDown;
		+MissileMore;
		+MissileEvenMore;
		+Telestomp;
		+NoInfightSpecies;
		+FloorClip;
		+AvoidMelee;
		+AvoidHazards; //This ONLY works for crushing ceilings and NOTHING ELSE. So it's largely useless but I'm still adding it.
		+SeeFriendlyMonsters; //No more ZScript code hacks.
	}
	
	Override Void PostBeginPlay ()
	{
		Super.PostBeginPlay();
		MarineState = MARINE_IDLING;
	}
	
	//Actions the marine is performing, can be stacked on each other like flags.
	Enum MarineStates
	{
		MARINE_IDLING 	= 1 << 0, //Bing chilling
		MARINE_CHASING	= 1 << 1, //Chasing someone.
		MARINE_WANDER	= 1 << 2, //Wandering
		MARINE_FIRING 	= 1 << 3, //Shooting
		MARINE_THROWING	= 1 << 4, //Throwing a grenade
		MARINE_RELOAD 	= 1 << 5, //Reloading
		MARINE_RETREAT	= 1 << 6, //GTFOing, assumed to be from some danger by default.
		//MARINE_PATROL	= 1 << 7, //Patrolling
	}
	
	//Sub-actions the marines are performing. Essentially, what they are doing EXACTLY. If the base state itself doesn't cover it. Can only have one.
	Enum MarineSubStates
	{
		//MARINE_RETREAT
		ACTION_FROMDANGER	= 0, //Default retreat reason, running from a threat.
		ACTION_WANTSRELOAD	= 1, //Retreating to reload
		
		//MARINE_FIRING
		ACTION_STANDINGUP	= 0, //The marine is firing upright, this is the default.
		//ACTION_AIMUP		= 1, //The marine is aiming up.
		//ACTION_AIMDOWN	= 2, //The marine is aiming down.
		ACTION_LYINGDOWN	= 3, //The marine is lying down.
		//ACTION_KNEELSTRAIGHT= 4, //The marine is shooting ahead and kneeling.
		//ACTION_KNEELUP	= 5, //The marine is kneeling and aiming up.
		//ACTION_KNEELDOWN	= 6, //The marine is kneeling and aiming down.
		
		//MARINE_THROWING
		ACTION_FRAG			= 0, //The marine is throwing a frag grenade, this is the default.
		ACTION_SMOKE		= 1, //The marine is throwing a smoke grenade to conceal himself and allies.
		ACTION_FLASHBANG	= 2, //The marine is throwing a flashbang to stun enemies and players.
	}
	
	Const MARINE_HEARDIST = 4096;
	Const MARINE_FOV = 120;
	Int MarineState; //What the marine doin'.
	//Int MarineSubState; //Besides the current state, what else is the marine doing in this state exactly ? e.g if they retreat, are they running to reload ?
	
	//DECORATE-esque function for use in states.
	Void SM_SetMarineState (Int Add, Int Remove, Bool RemoveAll = False/*, Int Action = 0*/)
	{
		MarineState |= Add;
		If (!RemoveAll)
			MarineState &= ~Remove;
		Else
			MarineState = 0;
	}
	
	States
	{
		Spawn: //MAYDO: Actually change the sight angle from animation frame to frame ?
			MARI EEEEFFFFGGGGHHHH 3 KAI_Look (0,0,MaxTargetRange,MARINE_HEARDIST,MARINE_FOV);
			Loop;
		//Idle:
		//Idle.Stay: //Staying around idle. Basically like in the spawn state.
		//Idle.Stay.Alert: //Standing there, menacingly. Maybe use this for if the marine last saw an enemy a few seconds ago ?
		//Idle.Stay.Kneel: //Standing around while kneeling down, can randomly pick this one. TG5 needs to make sprites for me to be able to add it though.
		See:
			TNT1 A 0 SM_SetMarineState (MARINE_CHASING,0,True); //NOTE: Might cause problems if I implement the patrolling state ?
			MARF ABCD 5;
			Goto See+1;
		Pain:
			MARA E Random (7,14) A_Pain();
			MARA E 0 SM_SetMarineState (0,MARINE_IDLING);
			//MARA E 0 A_JumpIf ((MarineState & MARINE_RELOAD),"Reload"); //Go back to reloading if you were doing that already. IDEA: Or run away a bit ?
			//MARA E 0 A_JumpIf ((MarineState & MARINE_RETREAT),"Retreat"); //Or running.
			Goto See;
	}
}