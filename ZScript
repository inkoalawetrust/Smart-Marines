Version "4.5"

//The marine is split across multiple files, to make managing it easier.

#Include "Marine_Movement.zsc" //If the Wander and StandStill states begin causing as trouble like in the last iteration, I'll fucking delete them.
#Include "Marine_Attacks.zsc" //The attack states of the marine.
#Include "Marine_OtherActors.zsc" //All the other actors the marine uses.
#Include "Marine_Swimming.zsc" //Contains the marines' swimming behavior.
#Include "Marine_Taunts.zsc" //The taunting behaviour is stored here.
#Include "Marine_Misc.zsc" //The miscellaneous states and code of the marine.
#Include "MarineFunctions.zsc" //A mixin class with all the custom functions.

#Include "VanillaRifle.zsc" //The rifle the marine may drop when killed by an enemy after doing nothing like a fucking moron for too long.

//To do:
/*HATE. LET ME TELL YOU HOW MUCH I'VE COME TO HATE YOU SINCE I BEGAN TO WORK ON YOU.
THERE ARE 86,000,000,000 NEURONS THAT MY BRAIN IS COMPOSED OF.
IF THE WORD HATE WAS ENGRAVED ON EACH NANOANGSTROM OF THOSE TENS OF BILLIONS OF NEURONS IT WOULD NOT EQUAL ONE ONE-BILLIONTH OF THE HATE I FEEL FOR
MARINES AT THIS MICRO-INSTANT FOR YOU. HATE. HATE.*/

Class SmartMarine : Actor //Good joke, me, "smart".
{
	Default
	{
		//$Title AI Marine
		//$Category Monsters
		//$Sprite MARIC1
		Health 120;
		GibHealth 20;
		Height 56;
		DeathHeight 12;
		CameraHeight 50;
		Radius 16;
		YScale 0.98;
		Mass 100;
		Speed 12;
		FastSpeed 24;
		PainChance 96;
		PainThreshold 5;
		FriendlySeeBlocks 20;
		MaxDropOffHeight 48;
		MaxTargetRange 8192;
		MinMissileChance 100;
		Tag "Marine NPC";
		Species "SmartMarine";
		Decal "BulletChip";
		Obituary "%o was shot to death by a marine";
		HitObituary "o% got %p head smashed in by a marines' rifle";
		DropItem "Clip";
		DropItem "Clip", 128, 2;
		DropItem "ClipBox", 64;
		DropItem "VanillaRifle", 32;
		Monster;
		+JumpDown;
		+MissileMore;
		+MissileEvenMore;
		+Telestomp;
		+NoInfightSpecies;
		+FloorClip;
		+AvoidMelee;
	}
	//User variables
	String User_Color; //The color of the marine.
	Int User_AttentionSpan; //How long the marines chases a target before giving up, the higher the value the longer the chase.
	Int User_GrenadeThreshold; //How likely the marine is to throw a grenade, the lower the more likely.
	Bool User_NoMelee; //The marine doesn't fight in melee.
	Bool User_NoGrenade; // The marine doesn't use grenades.
	Bool User_NoRetreat; //The marine doesn't retreat.
	Bool User_Persistent; //The marine doesn't lose track of his target.
	Bool User_NoReload; //The marine doesn't need to reload.
	Bool User_NoSwim; //The marine doesn't swim.
	Bool User_Fearless; //The marine doesn't get scared of certain enemies.
	Bool User_NoTaunt; //The marine doesn't have a chance to taunt after killing powerful enemies or players.
	Bool User_NoMookTaunt; //The marine doesn't have a chance to taunt after killing a lot of basic enemies.
	Bool User_RandomPersonality; //Randomizes aspects of the marine.
	//==============
	Mixin MarineFunctions;
	
	Bool NoSpawnJump; //Turned on once the marine exits Spawn, to not enter it again.
	Override Void Tick ()
	{
		Super.Tick();
		if (lastheard) console.printf("i last heard a %s",lastheard.getclassname());
		//So enemy and friendly marines can shoot each other.
		If (bFriendly) {Species = "SmartMarineFriend";} Else {Species = Default.Species;}
		
		//Prevents the marine from running far faster than he should.
		Speed = Clamp (Speed, Default.Speed, Default.Speed*1.5);
		
		//Prevents the swimming behaviour from breaking by jumping to the pain state.
		If (IsInState ("Swimming") || IsInState ("DiveIn")) {bNoPain = True;} Else {bNoPain = False;}
		
		//Makes the marine unkillable while taunting. Because causing them to stop taunting and react to enemies breaks them.
		If (IsInState ("Wave") || IsInState ("AltWave")) {bShootable = False; bSolid = False;} Else {bShootable = True; bSolid = True;}
	}
	Override Int DamageMobj (Actor Inflictor, Actor Source, Int Damage, Name MOD, Int Flags, Double Angle)
	{
		If (Source && IsHostile (Source) && !Target) //If you were attacked by an enemy and don't have a target already.
		{
			Source = Target;
		}
		Return Super.DamageMobj (Inflictor,Source,Damage,MOD,Flags,Angle);
	}
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		SetUserVariableDefaults();
		HandleMarineColoring();
		MagazineRounds = 20; //The initial amount of ammo the marine has.
	}
	States
	{
		Spawn:
			TNT1 A 0 A_JumpIf (NoSpawnJump,"See"); //Keep this line in mind, it may be the source of issues down the line.
			MARI A 0
			{
				A_SetTics(Random(0,30));
				A_SMarineLook();
			}
			MARI AAABBBCC 10 A_SMarineLook();
			Loop;
		See:
			TNT1 A 0
			{
				NoSpawnJump = True;
				If (!Target && !User_Persistent && Random (0,256) >= 230) {Return ResolveState ("Wander");} 
				//A_Log ("I'm in the see state.");
				Return ResolveState(Null);
			}
			MAR2 AABBCCDD 4 A_SMarineChase();
			Loop;
	}
}
