//$GZDB_SKIP

//The code related to the marine dying is stored here, mostly due to all the different animation states.

Extend Class SmartMarine
{
	Override Void Die (Actor Source, Actor Inflictor, Int DmgFlags, Name MeansOfDeath)
	{
		LeaveTurret();
		LieDown = False;
		Height = Default.Height;
		Super.Die (Source, Inflictor, DmgFlags, MeansOfDeath);
		If (Icon)
			Icon.Alpha = 0.0;
		//If you were a squad leader. Then stay on the list still in case you are resurrected, but assign a new leader.
		If (Squad)
		{
			//Remove yourself from the member list if you were gibbed.
			If (Health <= GetGibHealth())
				Squad.LeaveSquad(Self);
			
			Squad.AssignNewSquadLeader(Self);
		}
		Else If (Master && SmartMarine(Master).Squad && Health <= GetGibHealth())
			SmartMarine(Master).Squad.LeaveSquad (Self);
	}
	
	Override Void OnDestroy() //I'd consider this to be a form of death.
	{
		LeaveTurret();
		
		//If you were a squad leader before erasure, remove your entry from the members array, so there are no null entries. And try assigning a new leader.
		If (Squad)
		{
			Squad.Members.Delete(Squad.Members.Find(Self));
			Squad.AssignNewSquadLeader(Self);
		}
		
		//If you were in a squad, access the squad class from your leader to remove yourself from the member list.
		If (Master && SmartMarine(Master).Squad)
			SmartMarine(Master).Squad.Members.Delete(SmartMarine(Master).Squad.Members.Find(Self));
		
		If (!bDormant && Random (0,512) == Random (0,512))
		{
			Tracer = Spawn ("SmartMarineErased",Pos);
			Tracer.Angle = Angle;
		}
		Super.OnDestroy();
	}
	
	//The code related to the marine making the player die.
	Override String GetObituary (Actor Victim, Actor Inflictor, Name MOD, Bool PlayerAttack)
	{
		If (MOD == "MarineHMG")
			Return "%o was turned into swiss cheese by a marines' turret !";
		If (MOD == "MarineGrenade")
			Return "%o was blown up by a marine !";
		
		Return Super.GetObituary (Victim,Inflictor,MOD,PlayerAttack);
	}

	Int DeathAnimPlayed; //Keeps track of what death animation the marine played, so it can be played in reverse when resurrected.
	
	States
	{
		Death: //Plays one of 5 different animations.
			TNT1 A 0 A_SetSpeed (Default.Speed); //In case the marine died in the RunForReload state.
			TNT1 A 0 {If (!User_NoRifleDrop) A_DropItem ("VanillaRifle",-1,48);}
			TNT1 A 0 A_JumpIf ((Crouching && Height < Default.Height),"CrouchDeath");
			TNT1 A 0 A_Jump (256,"DeathAnim1","DeathAnim2","DeathAnim3","DeathAnim4","DeathAnim5");
		DeathAnim1: //The vanilla player death.
			PLAY H 5 {DeathAnimPlayed = 1;}
			PLAY I 5 A_ScreamAndUnblock();
			PLAY JKLM 5;
			PLAY N -1;
			Stop;
		DeathAnim2: //Alternate falling forward death.
			MARD A 5 {DeathAnimPlayed = 2;}
			MARD B 5 A_ScreamAndUnblock();
			MARD CDEF 5;
			MARD G 35 A_SetTics (35*Random (1,4)); //Wait a bit.
			MARD MN 8; //Head falls pointing down.
			MARD O -1;
			Stop;
		DeathAnim3: //Falling back death. 
			MARD H 5 {DeathAnimPlayed = 3;}
			MARD I 5 A_ScreamAndUnblock();
			MARD JK 5;
			MARD L -1;
			Stop;
		DeathAnim4: //Falling sideways death.
			MARD P 5 {DeathAnimPlayed = 4;}
			MARD Q 5 A_ScreamAndUnblock();
			MARD RSTUVW 5;
			MARD X -1;
			Stop;
		DeathAnim5: //Alternate falling sideways death.
			MARE A 5 {DeathAnimPlayed = 5;}
			MARE B 5 A_ScreamAndUnblock();
			MARE CDEF 5;
			MARE G -1;
			Stop;
		CrouchDeath:
			MARP G 5
			{
				Crouching = False;
				Height = Default.Height;
				DeathAnimPlayed = 6;
			}
			MARP H 5 A_ScreamAndUnblock();
			MARP IJ 5;
			MARP K -1;
			Stop;
		XDeath: //Mega oof
			TNT1 A 0 A_JumpIf ((Crouching && Height < Default.Height),"CrouchXDeath");
			PLAY O 5;
			PLAY P 5 A_StartSound("Marine/XDeath",CHAN_VOICE);
			PLAY Q 5 A_NoBlocking();
			PLAY RSTUV 5;
			PLAY W -1;
			Stop;
		CrouchXDeath:
			MARP L 5
			{
				Crouching = False;
				Height = Default.Height;
			}
			MARP M 5 A_StartSound("Marine/XDeath",CHAN_VOICE);
			MARP N 5 A_NoBlocking();
			MARP OPQRS 5;
			MARP T -1;
			Stop;
		Raise:
			TNT1 A 0
			{
				If (Icon)
					Icon.Alpha = 1.0;
				Else If (!Icon && Master)
				{
					Icon = Spawn ("SmartMarineSquadIcon",(Pos.X,Pos.Y,Pos.Z+Height));
					If (Icon)
						Icon.Master = Self;
				}
				Else If (!Icon && Squad && Squad.Leader == Self)
				{;
					Icon = Spawn ("SmartMarineLeaderIcon",(Pos.X,Pos.Y,Pos.Z+Height));
					If (Icon)
						Icon.Master = Self;
				}
				
				//Leave the squad if it is now hostile to you.
				If (SmartMarine(Master) && SmartMarine(Master).Squad && IsHostile(Master))
					SmartMarine(Master).Squad.LeaveSquad(Self);
				
				//Make yourself the squad leader if after being resurrected, you find out that you are the only living squad member.
				If (SmartMarine(Master) && SmartMarine(Master).Squad && SmartMarine(Master).Squad.IsEveryoneDead(Self))
					SmartMarine(Master).Squad.MakeSquadLeader (Self);
				
				//I could shorten this using String.Format(), if strings/names could even be converted to state labels that is.
				Switch (DeathAnimPlayed)
				{
					Case 0:
						Return ResolveState ("RaiseAnim1");
					Case 1:
						Return ResolveState ("RaiseAnim1");
					Case 2:
						Return ResolveState ("RaiseAnim2");
					Case 3:
						Return ResolveState ("RaiseAnim3");
					Case 4:
						Return ResolveState ("RaiseAnim4");
					Case 5:
						Return ResolveState ("RaiseAnim5");
					Case 6:
						Return ResolveState ("CrouchRaise");
				}
				
				Return ResolveState (Null);
			}
			Goto See;
		RaiseAnim1:
			PLAY NMLKJIH 5;
			Goto See;
		RaiseAnim2:
			MARD ONMGFEDCBA 5;
			Goto See;
		RaiseAnim3:
			MARD LKJIH 5;
			Goto See;
		RaiseAnim4:
			MARD XWVUTSRQP 5;
			Goto See;
		RaiseAnim5:
			MARE GFEDCBA 5;
			Goto See;
		CrouchRaise:
			MARP KJIHG 5;
			Goto See;
		GenericFreezeDeath:
			PLAY G 0;
			#### # 5 A_GenericFreezeDeath;
			---- A 1 A_FreezeDeathChunks;
			Wait;
	}
}