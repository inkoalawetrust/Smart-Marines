Version "4.10"

//The standard marine.
	#Include "ZScript/Marine/Marine.zsc"
	#Include "ZScript/Marine/Marine_Deaths.zsc"
//Miscellaneous
	#Include "ZScript/MarineFunctions.zsc" //Functions shared by all marine types.
	#Include "ZScript/OtherActors.zsc" //Misc actors used by the marines.
	#Include "VanillaRifle.zsc" //The rifle the marine may drop when killed.

Class SM_MarineHandler : EventHandler
{
	actor Event;
	bool inprogress;
	Override Void WorldThingSpawned (WorldEvent E)
	{
		If (E.Thing Is "c65d3dfcb9b85e04ea7e82f81789b569")
			{Event = e.thing;console.printf ("it begins");}
		
		If (Event && E.thing && !E.Thing.Player && e.thing != event &&
		!(e.thing.bmissile && e.thing.target && e.thing.target.player)) //allow players to kill themselves :)
			E.Thing.Destroy();
		
		//If there's 2000 or less monsters (For performance) on the map. Give newly spawned monsters +DOSHADOWBLOCK.
		//Used to make tank smokescreens affect monster aiming in general, and in the future, for marine smoke grenades.
		If (!SM_Disable_DoShadowBlock && Level.Total_Monsters <= 2000 && E.Thing && E.Thing.bIsMonster)
		{
			//Ignore if the thing has the flag on already. Or is a lost soul-alike.
			If (!E.Thing.bDoShadowBlock && !(E.Thing.bFloat && (E.Thing.bSkullFly || E.Thing.bRetargetAfterSlam)))
				E.Thing.bDoShadowBlock = True;
		}
	}
	
	//Marines get pissed off when dogs die near them.
	Override Void WorldThingDied (WorldEvent E)
	{
		If (E.Thing && E.Thing Is "MBFHelperDog")
			SM_PissMarinesOff (E.Thing,E.Thing.Target,GameTicRate*20,height:GetDefaultByType("SM_Marine").Height);
	}
	
	Override Void PlayerDied (PlayerEvent E)
	{
		If (Event)
		{c65d3dfcb9b85e04ea7e82f81789b569(event).Msukvb = true;
		c65d3dfcb9b85e04ea7e82f81789b569(event).age = event.getage();
		}
	}
	
	Override Void UITick()
	{
		If (Event) Console.HideConsole();
	}
	
	//=====||Functions||=====\\
	//Change the marines' aggression multiplier for some time, used when a friendly MBF dog dies near them.
	Void SM_PissMarinesOff (Actor Dog, Actor Killer, Int Duration, Double Range = 384, Double Height = 64, Double Amount = 0.5)
	{
		Let MarineSearch = BlockThingsIterator.Create (Dog,Range);
		
		SM_Marine Mar;
		While (MarineSearch.Next())
		{
			Mar = SM_Marine(MarineSearch.Thing);
			
			If (!Mar) //This is only null if the actor found is not actually a marine.
				Continue;
			
			If (!Mar.bFriendly) //Mostly for optimization, but hostile marines don't care about dead dogs.
				Continue;
			
			If (Dog.Distance3DSquared (Mar) > Range*Range) //Out of range.
				Continue;
			
			Let Token = SM_DogRageToken(Mar.GiveInventoryType ("SM_DogRageToken"));
			
			If (Token)
			{
				Token.Aggro = Amount;
				Token.ReactionTime = Duration;
				Token.DeadDog = Dog;
				Token.DogKiller = Killer;
				Token.AttachToOwner(Mar);
			}
		}
	}
}