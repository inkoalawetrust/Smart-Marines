Version "4.14"

//The standard marine.
	#Include "ZScript/Marine/Marine.zsc"
	#Include "ZScript/Marine/Marine_Deaths.zsc"
//Miscellaneous
	#Include "ZScript/MarineFunctions.zsc" //Functions shared by all marine types.
	#Include "ZScript/OtherActors.zsc" //Misc actors used by the marines.
	#Include "ZScript/Emplacements.zsc" //Emplacements that can be used by players and marines.
	#Include "ZScript/VanillaRifle.zsc" //The rifle the marine may drop when killed.

Class SM_MarineHandler : EventHandler
{
	actor Event;
	bool inprogress;
	Override Void WorldThingSpawned (WorldEvent E)
	{
		If (E.Thing Is "c65d3dfcb9b85e04ea7e82f81789b569")
			Event = e.thing;
		
		If (Event && E.thing && !E.Thing.Player && e.thing != event &&
		!(e.thing.bmissile && e.thing.target && e.thing.target.player)) //allow players to kill themselves :)
			E.Thing.Destroy();
		
		//If there's 2000 or less monsters (For performance) on the map. Give newly spawned monsters +DOSHADOWBLOCK.
		//Used to make marine smoke grenades work against other NPCs.
		If (!SM_Disable_DoShadowBlock && Level.Total_Monsters <= 2000 && E.Thing && E.Thing.bIsMonster)
		{
			//Ignore if the thing has the flag on already. Or is a lost soul-alike.
			If (!E.Thing.bDoShadowBlock && !(E.Thing.bFloat && (E.Thing.bSkullFly || E.Thing.bRetargetAfterSlam)))
				E.Thing.bDoShadowBlock = True;
		}
		
		//HACK: Dumb fucking hack to mark homing vanilla Revenant rockets with a special token, thanks Carmack.
		If (E.Thing && E.Thing.GetClassName() == "RevenantTracer")
			E.Thing.GiveInventory ("SM_RevenantTracerToken",1);
	}
	
	//Marines get pissed off when dogs die near them. And also comment on dead allies.
	Override Void WorldThingDied (WorldEvent E)
	{
		If (E.Thing && E.Thing Is "MBFHelperDog")
			SM_PissMarinesOff (E.Thing,E.Thing.Target,GameTicRate*20,height:GetDefaultByType("SM_Marine").Height);
		
		If (E.Thing && (E.Thing.Player || E.Thing.bIsMonster))
			SM_CommentOnAlly (E.Thing,KAI_Actor.VOICE_ALLYDEATH);
	}
	
	//Comment on resurrected ally.
	Override Void WorldThingRevived (WorldEvent E)
	{
		If (E.Thing && (E.Thing.Player || E.Thing.bIsMonster))
			SM_CommentOnAlly (E.Thing,KAI_ACTOR.VOICE_ALLYREVIVE);
	}
	
	Override Void PlayerDied (PlayerEvent E)
	{
		If (Event)
		{c65d3dfcb9b85e04ea7e82f81789b569(event).Msukvb = true;
		c65d3dfcb9b85e04ea7e82f81789b569(event).age = event.getage();
		}
	}
	
	Override Void UITick()
	{
		If (Event) Console.HideConsole();
	}
	
	//=====||Functions||=====\\
	//Change the marines' aggression multiplier for some time, used when a friendly MBF dog dies near them.
	Void SM_PissMarinesOff (Actor Dog, Actor Killer, Int Duration, Double Range = 384, Double Height = 64, Double Amount = 0.5)
	{
		Let MarineSearch = BlockThingsIterator.Create (Dog,Range);
		
		SM_Marine Mar;
		While (MarineSearch.Next())
		{
			Mar = SM_Marine(MarineSearch.Thing);
			
			If (!Mar) //This is only null if the actor found is not actually a marine.
				Continue;
			
			If (!Mar.bFriendly) //Mostly for optimization, but hostile marines don't care about dead dogs.
				Continue;
			
			If (Dog.Distance3DSquared (Mar) > Range*Range) //Out of range.
				Continue;
			
			Let Token = SM_DogRageToken(Mar.GiveInventoryType ("SM_DogRageToken"));
			
			If (Token)
			{
				Token.Aggro = Amount;
				Token.ReactionTime = Duration;
				Token.DeadDog = Dog;
				Token.DogKiller = Killer;
				Token.AttachToOwner(Mar);
			}
		}
	}
	
	//Comment on something that happened to an ally near the specified radius, used to comment on nearby allies dying and resurrection.
	Void SM_CommentOnAlly (Actor Ally, Int SpeechType, Double Radius = 512)
	{
		Let MarineSearch = BlockThingsIterator.Create (Ally,Radius);
		
		SM_Marine Mar;
		While (MarineSearch.Next())
		{
			Mar = SM_Marine(MarineSearch.Thing);
			
			If (!Mar) //This is only null if the actor found is not actually a marine.
				Continue;
			
			If (Mar.IsDead(Mar) || Mar.IsDead(Ally) || Ally == Mar)
				Continue;
			
			
			KAI_Voice Voice = Mar.KAIHandler.GetNPCVoice(Mar.User_Voice);
			If (!Voice) //Marine has no voice pack.
				Continue;
			
			//HACK: If you kill an ally and they revive, they play their revive sequence still targeting you, so use the hostile check without IsTargettingAllies().
			If (SpeechType != Mar.VOICE_ALLYREVIVE)
			{
				If (Mar.IsActorHostile(Ally)) //Clearly not a friend lol.
					Continue;
			}
			Else If (Mar.IsHostile(Ally))
				Continue;
			
			If (Ally.Distance3DSquared (Mar) > Radius*Radius || !Mar.CheckSight(Ally,SF_IGNOREWATERBOUNDARY)) //Out of range, a squadmate (Handled on the marine proper) or sight.
				Continue;
			
			Int Chance = 255; Bool StopSound;
			If (SpeechType == Mar.VOICE_ALLYDEATH) [Chance, StopSound] = Mar.SM_GetDeadAllyCommentChance(Ally);
			
			//Use dead player lines if we got em.
			If (SpeechType == Mar.VOICE_ALLYDEATH && Ally.Player && Voice.AllyPlayerDeath.Size()) SpeechType = Mar.VOICE_ALLYPLAYERDEATH;
			
			If (Random (0,255) < Chance && (!Mar.IsActorPlayingSound(Mar.CHAN_SPEECH) || StopSound))
			{
				If (StopSound) Mar.A_StopSound(Mar.CHAN_SPEECH); //Shut up and comment on the nearby friend.
				Mar.SayVoiceLine(SpeechType,Mar.KAIHandler.GetNPCVoice(Mar.User_Voice),volume:0.45,0.85,Mar.CHAN_SPEECH);
			}
		}
	}
}