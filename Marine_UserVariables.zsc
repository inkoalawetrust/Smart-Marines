//Code related to the marines' user variables goes here.

Extend Class SmartMarine
{	
	//Handles the coloring of the marines.
	Void HandleMarineColoring()
	{
		If (!User_Color || User_Color ~== "") Return; //Don't run the code if User_Color is empty.
		
		//Handles the random color choice that is performed if the color name given is "Random".
		If (User_Color ~== "Random")
		{
			Static Const String ColorArray[] = {"Red","Gray","White","Black","Blue","Yellow","Orange","Pink","DarkGreen","DarkRed","Default"}; //Contains all the valid color names.
			
			User_Color = ColorArray[Random(0,ColorArray.Size()-1)]; //Randomly picks a color string.
		}

		A_SetTranslation (String.Format("Marine_%s", User_Color));
	}
	
	Void SetUserVariableDefaults()
	{
		//The //$UserDefaultValue editor key is buggy, so this code still needs to be used.
		If (User_SearchTime == 0) User_SearchTime = 500; //The amount of time the marine tries to chase it's target, after it has died or gone out of sight.
		If (User_GrenadeThreshold == 0) User_GrenadeThreshold = 240; //Default threshold that needs to be reached or surpassed, for the marine to throw a grenade.
		If (User_RetreatAttempts == 0) User_RetreatAttempts = 10; //Default amount of attempts the marine makes to run for cover to reload.
		If (User_AlertRange == 0) User_AlertRange = 384; //Default range in which marines alert each other of enemies.
		If (User_EnemyAlertHearingRange == 0) User_EnemyAlertHearingRange = 1024; //Default range in which marines can hear the alerts of enemy marines.
		If (User_DodgeRange == 0) User_DodgeRange = 384; //Default range in which marines dodge projectiles.
		If (User_TurretThreshold == 0) User_TurretThreshold = 100; //Default chance for the marine to use a turret.
		If (User_FearDistance == 0) User_FearDistance = 2048; //The default distance the marines keeps from powerful enemies.
		
		If (!bFriendly) Return; //The rest is only relevant to player allies.
		
		Array <PlayerPawn> VisibleFriends;
		//Friendly marine with no default order specified.
		If (!User_DefaultOrder || User_DefaultOrder ~== "")
		{
			//This tries to pick a random visible player for the marine to follow, if no friendly players are in sight, the marine will wander instead.
			//Find all visible players friendly to you.
			For (Int I = 0; I < MAXPLAYERS; I++)
			{
				If (!PlayerInGame[I]) Continue;
				
				If (IsFriend (Players[I].Mo) && CheckSight (Players[I].Mo, SF_IGNOREVISIBILITY|SF_IGNOREWATERBOUNDARY))
					VisibleFriends.Push (Players[I].Mo);
			}
			
			//Found at least one visible friendly player to follow.
			If (VisibleFriends.Size() - 1 >= 0)
			{
				SetFriendPlayer (VisibleFriends[Random (0, VisibleFriends.Size() - 1)].Player); //Randomly pick a visible friend to follow.
				CurrentMarineOrder = ORDER_FOLLOW;
			}
			//No friendplayer, or they are out of sight
			Else If (!FriendPlayer || FriendPlayer && !CheckSight (Players[FriendPlayer].Mo, SF_IGNOREVISIBILITY|SF_IGNOREWATERBOUNDARY))
			{
				CurrentMarineOrder = ORDER_WANDER;
				bDontFollowPlayers = True;
			}
		}
		Else If (User_DefaultOrder ~== "Follow")
		{
			CurrentMarineOrder = ORDER_FOLLOW;
		}
		Else If (User_DefaultOrder ~== "Wander")
		{
			CurrentMarineOrder = ORDER_WANDER;
			bDontFollowPlayers = True;
		}
	}

	Void HandleRandomPersonalityMidGame()
	{
		If (User_RandomPersonality)
		{
			If (!User_SearchTime) User_SearchTime = 500*FRandom (-0.6,3.0);
			If (!User_GrenadeThreshold) User_GrenadeThreshold = 240*FRandom (-0.75,2.0);
			If (!User_RetreatAttempts) User_RetreatAttempts = Random (7,15);
			If (!User_FearDistance) User_FearDistance = 2048*FRandom (0.75,2.0);
			If (!User_TurretThreshold) User_TurretThreshold = 100*Frandom (0.5,1.5);
			If (!User_Color || User_Color ~== "") User_Color = "Random";
			User_RandomPersonality = False;
		}
	}
	
	Int User_SearchTime;
	Int User_GrenadeThreshold;
	Int User_RetreatAttempts;
	Int User_TurretThreshold;
	Double User_AlertRange;
	Double User_EnemyAlertHearingRange;
	Double User_FearDistance;
	Double User_DodgeRange;
	Bool User_DisobeyCommands;
	Bool User_NoReload;
	Bool User_NoCover;
	Bool User_ClipPlayers;
	Bool User_RandomPersonality;
	Bool User_NoRifleDrop;
	String User_Color;
	String User_SquadName;
	Bool User_Leader;
	String User_DefaultOrder;
} 